apiVersion: v1
kind: Namespace
metadata:
  name: hello-k8s
---
apiVersion: v1
kind: Service
metadata:
  name: hello-k8s
  namespace: hello-k8s
spec:
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: hello-k8s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-k8s
  namespace: hello-k8s
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: hello-k8s
  template:
    metadata:
      labels:
        app: hello-k8s
    spec:
      containers:
        - name: hello-k8s
          image: CONTAINER_IMAGE
          securityContext:
            privileged: false
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
          ports:
            - containerPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: hello-k8s
  namespace: hello-k8s
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/tags: Environment=dev
    alb.ingress.kubernetes.io/subnets: subnet-0b9bb49bc9bb0ac1d,subnet-0c98609dd3c366a53,subnet-04704c14aac4c1bf2
spec:
  rules:
    - host: urbandev.sourcefuse.com
      http:
        paths:
          - path: /
            backend:
              serviceName: hello-k8s
              servicePort: 80
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hello-k8s
  namespace: hello-k8s
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: hello-k8s
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 80
  - type: Resource
    resource:
      name: memory
      targetAverageValue: 200Mi
